// Code generated by ent, DO NOT EDIT.

package analysis

const (
	// Label holds the string label denoting the analysis type in the database.
	Label = "analysis"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTopicID holds the string denoting the topic_id field in the database.
	FieldTopicID = "topic_id"
	// FieldAvgRating holds the string denoting the avg_rating field in the database.
	FieldAvgRating = "avg_rating"
	// EdgeUnderTopicOf holds the string denoting the undertopicof edge name in mutations.
	EdgeUnderTopicOf = "underTopicOf"
	// Table holds the table name of the analysis in the database.
	Table = "analyses"
	// UnderTopicOfTable is the table that holds the underTopicOf relation/edge.
	UnderTopicOfTable = "analyses"
	// UnderTopicOfInverseTable is the table name for the Topic entity.
	// It exists in this package in order to avoid circular dependency with the "topic" package.
	UnderTopicOfInverseTable = "topics"
	// UnderTopicOfColumn is the table column denoting the underTopicOf relation/edge.
	UnderTopicOfColumn = "topic_analysis"
)

// Columns holds all SQL columns for analysis fields.
var Columns = []string{
	FieldID,
	FieldTopicID,
	FieldAvgRating,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "analyses"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"topic_analysis",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
