// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnalysesColumns holds the columns for the "analyses" table.
	AnalysesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "topic_id", Type: field.TypeInt},
		{Name: "avg_rating", Type: field.TypeFloat64},
		{Name: "topic_analysis", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// AnalysesTable holds the schema information for the "analyses" table.
	AnalysesTable = &schema.Table{
		Name:       "analyses",
		Columns:    AnalysesColumns,
		PrimaryKey: []*schema.Column{AnalysesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "analyses_topics_analysis",
				Columns:    []*schema.Column{AnalysesColumns[3]},
				RefColumns: []*schema.Column{TopicsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RatingsColumns holds the columns for the "ratings" table.
	RatingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "topic_id", Type: field.TypeInt},
		{Name: "rating", Type: field.TypeFloat64},
		{Name: "comment", Type: field.TypeString},
		{Name: "topic_ratings", Type: field.TypeInt, Nullable: true},
		{Name: "user_ratings", Type: field.TypeInt, Nullable: true},
	}
	// RatingsTable holds the schema information for the "ratings" table.
	RatingsTable = &schema.Table{
		Name:       "ratings",
		Columns:    RatingsColumns,
		PrimaryKey: []*schema.Column{RatingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ratings_topics_ratings",
				Columns:    []*schema.Column{RatingsColumns[5]},
				RefColumns: []*schema.Column{TopicsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ratings_users_ratings",
				Columns:    []*schema.Column{RatingsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TopicsColumns holds the columns for the "topics" table.
	TopicsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "topic_name", Type: field.TypeString},
	}
	// TopicsTable holds the schema information for the "topics" table.
	TopicsTable = &schema.Table{
		Name:       "topics",
		Columns:    TopicsColumns,
		PrimaryKey: []*schema.Column{TopicsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnalysesTable,
		RatingsTable,
		TopicsTable,
		UsersTable,
	}
)

func init() {
	AnalysesTable.ForeignKeys[0].RefTable = TopicsTable
	RatingsTable.ForeignKeys[0].RefTable = TopicsTable
	RatingsTable.ForeignKeys[1].RefTable = UsersTable
}
